class Solution:
    def arrayNesting(self, nums: List[int]) -> int:
        if len(nums) == 0 or nums is None: return 0
        
        visited = [False for _ in range(len(nums))]
        res, index = 0, []
        for i in range(len(nums)):
            if visited[i] == False:
                s = []
                current = nums[i]
                while current not in s:
                    s.append(current)
                    visited[current] = True
                    current = nums[current]
                res = max(len(s), res)
        
        return res


class Solution {
    public int arrayNesting(int[] nums) {
        boolean[] visited = new boolean[nums.length];
        int res = 0;
        for (int i = 0; i < nums.length; i++) {
            if (!visited[i]) {
                int start = nums[i], count = 0;
                do {
                    start = nums[start];
                    count ++;
                    visited[start] = true;
                }
                while (start != nums[i]);
                res =  Math.max(res, count);
            }
        }
        return res;
    }
}
