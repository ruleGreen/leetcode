# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def deleteDuplicates(self, head: ListNode) -> ListNode:
        if not head: return None
        
        if head.next and head.val == head.next.val:
            v = head.val
            while head:
                head = head.next
                if head == None: return None
                if head.val != v:
                    break

        new = ListNode(0)
        new.next = head
        cur,prev = new.next,new
        while cur:
            if cur.next == None: return new.next
            if cur.val == cur.next.val:
                node = cur.next
                while node != None and node.val == cur.val:
                    node = node.next
                cur,prev.next = node,node
            else:
                prev,cur = cur,cur.next
            
        return new.next
        
        
