class Solution {
    public boolean isValidSudoku(char[][] board) {
        if (board == null || board.length == 0) return true;
        return solve(board);
    }
    
    public boolean solve(char[][] board){
        for (int i = 0; i < board.length; i++) for (int j = 0; j < board.length; j++){
                if (board[i][j] != '.'){
                    if (!isValid(board, i, j, board[i][j]))
                        return false;
                }
            }
        return true;
    }
    
    public boolean isValid(char[][] board, int row, int col, char c){
        board[row][col] = '.';
        for(int i = 0; i < 9; i++){
            if(board[i][col] != '.' && board[i][col] == c) return false;
            if(board[row][i] != '.' && board[row][i] == c) return false;
            if(board[3 * (row/3) +  i/3][3 * (col/3) + i%3] != '.' && board[3 * (row/3) + i/3][3 * (col/3) + i%3] == c) return false;
        }
        return true;
    }
    
}
