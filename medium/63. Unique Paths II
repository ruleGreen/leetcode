class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        m = len(obstacleGrid)
        n = len(obstacleGrid[0])
        if not m or not n:
            return
        res = [[0]*n for i in range(m)]
        for i in range(n):
            if obstacleGrid[0][i] == 1:
                break
            res[0][i] = 1
        for j in range(m):
            if obstacleGrid[j][0] == 1:
                break
            res[j][0] = 1
        for i in range(1,m):
            for j in range(1,n):
                if obstacleGrid[i][j] == 0:
                    res[i][j] = res[i-1][j] + res[i][j-1]
        #print(res)
        return res[m-1][n-1]
