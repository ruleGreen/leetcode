class Solution:
    def search(self, nums: List[int], target: int) -> bool:
        if nums is None or target is None:
            return False
        
        l, r = 0, len(nums) - 1
        while l <= r:
            mid = (r - l) // 2 + l
            while l < mid and nums[l] == nums[mid]: # tricky part
                l += 1
            # remember the value of start and end
            if nums[mid] == target:
                return True
            elif nums[mid] >= nums[l]:
                if nums[l] <= target < nums[mid]:
                    r = mid - 1
                else:
                    l = mid + 1
            elif nums[mid] <= nums[r]:
                if  nums[mid] <= target <= nums[r]:
                    l = mid + 1
                else:
                    r = mid - 1
        return False
        
        
def search(self, nums, target):
    if not nums:
        return False
    l, r = 0, len(nums)-1
    while l < r:
        mid = l + (r-l)//2
        if nums[mid] == target:
            return True
        if nums[mid] < nums[r]:
            if nums[mid] < target <= nums[r]:
                l = mid + 1
            else:
                r = mid - 1
        elif nums[mid] > nums[r]:
            if nums[l] <= target < nums[mid]:
                r = mid - 1
            else:
                l = mid + 1
        else:
            r -= 1
    return nums[l] == target
