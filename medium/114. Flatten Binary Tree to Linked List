# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        res = []
        def preorder(root):
            if root:
                res.append(root.val)
                preorder(root.left)
                preorder(root.right)
        if root is None:
            return None
        
        preorder(root)
        root.left = None
        head = root
        for i in range(1, len(res)):
            node = TreeNode(res[i])
            head.right = node
            head = head.right
            
        return root
            
