
Question:

Given 1->2->3->4, you should return the list as 2->1->4->3.

Solution:

1.

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def swapPairs(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        pre, pre.next = self,head
        while pre.next and pre.next.next:
            a = pre.next
            b = a.next
            # a,b,b.next = b,b.next,a # a,b are temporary variable
            pre.next,a.next,b.next = b,b.next,a
            pre = a
        return self.next
    
# 1->2->3->4  => 2->3â€”>1->4 => 2->1->4->3

2.

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def swapPairs(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if head is None or head.next is None:
            return head
        headOfRest=head.next.next
        head,head.next=head.next,head
        head.next.next=self.swapPairs(headOfRest)
        return head
