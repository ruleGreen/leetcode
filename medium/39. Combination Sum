class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        self.res = []
        
        self.dfs(candidates, target, [])
        
        return self.res
    
    def dfs(self, nums, target, choice):
            if target == 0:
                choice = sorted(choice)
                if choice not in self.res:
                    self.res.append(choice)
                return
            if target < 0:
                return
            
            for i in range(0, len(nums)):
                choice.append(nums[i])
                self.dfs(nums, target - nums[i], choice)
                choice.pop(-1)
