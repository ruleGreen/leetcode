"""
# Definition for a Node.
class Node:
    def __init__(self, val, next, random):
        self.val = val
        self.next = next
        self.random = random
"""
class Solution:
    def copyRandomList(self, head: 'Node') -> 'Node':
        if head is None:
            return None
        
        # 剑指offer的题目
        
        current = head
        while current is not None:
            node = Node(current.val, current.next, None)
            current.next = node
            current = node.next
            
        current = head
        while current is not None:
            node = current.next
            if current.random is not None:
                node.random = current.random.next
            current = node.next
        
        linkedonehead = linkedone = head
        
        if linkedone is not None:
            linkedtwohead = linkedtwo = linkedone.next
            linkedone.next = linkedtwo.next
            linkedone = linkedone.next
        
        while linkedone is not None:
            linkedtwo.next = linkedone.next
            linkedtwo = linkedtwo.next
            linkedone.next = linkedtwo.next
            linkedone = linkedone.next
        
        return linkedtwohead
       
