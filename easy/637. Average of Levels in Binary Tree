# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def averageOfLevels(self, root: TreeNode) -> List[float]:
        self.res = []
        self.avg = []
        def getNodeOfLevels(node, level):
            if node is None:
                return 
            # print(self.res, len(self.res), level)
            if len(self.res) <= level:
                self.res.append([node.val])
            else:
                self.res[level].append(node.val)
            getNodeOfLevels(node.left, level + 1)
            getNodeOfLevels(node.right, level + 1)
            
        getNodeOfLevels(root, 0)
        self.avg = [sum(self.res[i]) / len(self.res[i]) for i in range(0, len(self.res))]
        return self.avg
