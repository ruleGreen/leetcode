# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        if l1 == None and l2 != None: return l2
        elif l1 != None and l2 == None: return l1
        elif l1 == None and l2 == None: return None
        
        newList = ListNode(0)
        cur = newList
        cur1 = l1
        cur2 = l2
        while cur1 and cur2:
            if cur1.val < cur2.val:
                cur.next = cur1
                cur1 = cur1.next
                cur = cur.next
            else:
                cur.next = cur2
                cur2 = cur2.next
                cur = cur.next
            
            if cur1 == None and cur2 != None:
                cur.next = cur2
                return newList.next
            elif cur2 == None and cur1 != None:
                cur.next = cur1
                return newList.next
            
        return newList.next
       
            

                
                
        
        
